@model MVCDAY3.Models.Student
@using MVCDAY3.Models.Enums;

<!--
The Html.ValidationMessageFor() is a strongly typed extension method.It displays a validation message if an error exists for the specfied
field in the ModelStateDictionary Object  
ValidateMessageFor(Func<>, string validationMessage, object htmlAttributes)
The second parameter ids for custom error message
-->
<h2>Create Student Form</h2>

<form action="/Student/Create" method="post">

    <div class="form-group">
        @Html.LabelFor(m=>m.FirstName)
        @Html.EditorFor(m=>m.FirstName, new { htmlAttributes = new { @class = "form-control" } } )
        
        
    </div>
    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })


    <div>
        @Html.LabelFor(m => m.LastName)
        @Html.EditorFor(m => m.LastName, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })


    <div>
        @Html.LabelFor(m => m.Age)
        @Html.EditorFor(m => m.Age, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    @Html.ValidationMessageFor(m => m.Age, "", new { @class = "text-danger" })

    <div>
        <label for="DateOfBirth">Date Of Birth:</label>
        <input id="DateOfBirth" class="form-control" type="date" name="DateOfBirth" value="@(Model?.DateOfBirth)" />
    </div>
    @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })

    @{
        var countries = Enum.GetNames(typeof(Country));
    }

    @{
        int countryValue = 0;
        if (!(Model == null))
        {
            countryValue = (int)Model?.Country;
        }
    }



    <div class="form-group">
        <label for="country">Country</label>
        <select id="country" class="form-control" name="Country">
            @for (int i = 0; i < countries.Length; i++)
            {
                if (i == countryValue)
                {
                    <option selected value="@i">@countries[i]</option>
                }
                <option value="@i">@countries[i]</option>
            }
        </select>
    </div>
    @Html.ValidationMessageFor(m => m.Country, "", new { @class = "text-danger" })


    <div class="form-group">
        <label for="photo">Image:</label>
        <input id="photo" class="form-control" type="url" name="PhotoUrl" value="@(Model?.PhotoUrl)" />
    </div>
    @Html.ValidationMessageFor(m => m.PhotoUrl, "", new { @class = "text-danger" })


    <input class="btn btn-primary" type="submit" value="Create" />
    <input class="btn btn-success" type="reset" value="Clear" />
</form>

