// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrivateSchoolAPI.Contexts;

#nullable disable

namespace PrivateSchoolAPI.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("PrivateSchoolAPI.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(4);

                    b.Property<string>("Stream")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("Courses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDateTime = new DateTime(2023, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Java",
                            StartDateTime = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stream = "CB16"
                        },
                        new
                        {
                            Id = 2,
                            EndDateTime = new DateTime(2023, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Csharp",
                            StartDateTime = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stream = "CB16"
                        },
                        new
                        {
                            Id = 3,
                            EndDateTime = new DateTime(2023, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Javascript",
                            StartDateTime = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stream = "CB16"
                        },
                        new
                        {
                            Id = 4,
                            EndDateTime = new DateTime(2023, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Python",
                            StartDateTime = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Stream = "CB16"
                        });
                });

            modelBuilder.Entity("PrivateSchoolAPI.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(4);

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(5);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 24,
                            CourseId = 1,
                            FirstName = "Spyros",
                            LastName = "Tomaras"
                        },
                        new
                        {
                            Id = 2,
                            Age = 22,
                            CourseId = 1,
                            FirstName = "Agathi",
                            LastName = "Tomaras"
                        },
                        new
                        {
                            Id = 3,
                            Age = 60,
                            CourseId = 2,
                            FirstName = "Eleni",
                            LastName = "Kallifoni"
                        },
                        new
                        {
                            Id = 4,
                            Age = 65,
                            CourseId = 2,
                            FirstName = "Stathis",
                            LastName = "Tomaras"
                        },
                        new
                        {
                            Id = 5,
                            Age = 21,
                            CourseId = 3,
                            FirstName = "Apostolis",
                            LastName = "Papanikolaoy"
                        },
                        new
                        {
                            Id = 6,
                            Age = 27,
                            CourseId = 3,
                            FirstName = "Xristoforos",
                            LastName = "Kallifonis"
                        },
                        new
                        {
                            Id = 7,
                            Age = 39,
                            CourseId = 4,
                            FirstName = "Yiannis",
                            LastName = "Karakasis"
                        },
                        new
                        {
                            Id = 8,
                            Age = 24,
                            CourseId = 4,
                            FirstName = "Xristos",
                            LastName = "Kanoulas"
                        });
                });

            modelBuilder.Entity("PrivateSchoolAPI.Entities.Student", b =>
                {
                    b.HasOne("PrivateSchoolAPI.Entities.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("PrivateSchoolAPI.Entities.Course", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
