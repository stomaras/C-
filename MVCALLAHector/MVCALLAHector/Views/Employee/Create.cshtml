@model MVCALLAHector.Models.Employee
@using MVCALLAHector.Models.Enums




<h2>Create Employee Works</h2>

<h1>Create Employee</h1>

<form method="post">



    <div class="form-group">
        @Html.LabelFor(m=>m.Name)
        @Html.EditorFor(m=>m.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Give Your Name" }   }  )
    </div>
    @Html.ValidationMessageFor(m => m.Name, "", new { title = "Boom", id = "boomer", @class = "text-danger" })

<div class="form-group">
    @Html.LabelFor(m => m.Salary)
    @Html.EditorFor(m => m.Salary, new { htmlAttributes = new { @class = "form-control", type = "number", placeholder = "Give your Salary" } })
</div>
    @Html.ValidationMessageFor(m => m.Salary, "", new { title = "Boom", id = "boomer", @class = "text-danger" })

    <div class="form-group">
        <lable for="age">Age: </lable>
        <input id="age" class="form-control" type="number" name="Age" value="@(Model?.Age)" />
    </div>
    @Html.ValidationMessageFor(m => m.Age, "", new { title = "Boom", id = "boomer", @class = "text-danger" })

    <div class="form-group">
        <lable for="hireDate">Hire Date: </lable>
        <input id="hireDate" class="form-control" type="date" name="HireDate" value="@(Model?.HireDate)" />
    </div>
    @Html.ValidationMessageFor(m => m.HireDate, "", new { title = "Boom", id = "boomer", @class = "text-danger" })

    @{
        var countries = Enum.GetNames(typeof(Country));
    }

    @{
        int countryValue = 0;
        if (!(Model == null))
        {
            countryValue = (int)Model?.Country;
        }
    }


    <div class="form-group">
        <label for="country">Country</label>
        <select id="country" class="form-control" name="Country">


            @for (int i = 0; i < countries.Length; i++)
            {
                if (i == countryValue)
                {
                    <option selected value="@i">@countries[i]</option>
                }
                else
                {
                    <option value="@i">@countries[i]</option>
                }

            }





        </select>
    </div>
    @Html.ValidationMessageFor(m => m.Country, "", new { title = "Boom", id = "boomer", @class = "text-danger" })
    <div class="form-group">
        <lable for="photo">Image: </lable>
        <input id="photo" class="form-control" type="url" name="PhotoUrl" value="" />
    </div>
    @Html.ValidationMessageFor(m => m.PhotoUrl, "", new { title = "Boom", id = "boomer", @class = "text-danger" })
    <input class="btn btn-primary" type="submit" value="Create" />
    <input class="btn btn-success" type="reset" value="Clear" />
</form>