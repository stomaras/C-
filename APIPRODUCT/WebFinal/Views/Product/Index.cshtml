
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>
<div>
    <button id="loadBtn" class="btn btn-info">Load Data...</button>
    <button id="createBtn" class="btn btn-primary" data-toggle="modal" data-target="#myModal">Create Product</button>
</div>
<table class="table" id="myTable">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Total</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @*<tr>
                <td class="productId">1</td>
                <td class="productName" contenteditable="false">Samsung</td>
                <td class="productPrice"><input type="number", value="300" disabled /></td>
                <td class="productQuantity"><input type="number", value="3" disabled/></td>
                <td class="productTotal">100</td>
            </tr>*@


    </tbody>
</table>

<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Create Product</h4>
            </div>
            <div class="modal-body">

                <div class="form-group">
                    <label for="productName">Product Name</label>
                    <input id="productName" class="form-control" type="text" value="" placeholder="Give Product Name" />
                </div>
                <div class="form-group">
                    <label for="productPrice">Product Price</label>
                    <input id="productPrice" class="form-control" type="number" value="" placeholder="Give Product Price" />
                </div>
                <div class="form-group">
                    <label for="productQuantity">Product Quantity</label>
                    <input id="productQuantity" class="form-control" type="number" value="" placeholder="Give Product Quantity" />
                </div>

            </div>
            <div class="modal-footer">
                <button id="createFormBtn" class="btn btn-primary">Create Product</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@section MyScripts{
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

    <script>

        $("#createFormBtn").on("click", function onCreateProductHandler() {
            let name = $("#productName").val();
            let price = $("#productPrice").val();
            let quantity = $("#productQuantity").val();

            let product = { name, price, quantity };

            let requestObject = JSON.stringify(product);

            let settings = {
                url: "https://localhost:44336/ProductAPI/CreateProduct",
                method: "POST",
                timeout: 0,
                headers: {
                    "Content-Type": "application/json"
                },
                data: requestObject //json....,
            };

            $.ajax(settings).done(function (response) {
                console.log(response);
            });
            
        })




        $("#loadBtn").on("click", function onLoadDataHandler(event) {

            LoadSpinner();
            var settings = {
                "url": "https://localhost:44336/ProductAPI/GetAllProducts",
                "method": "GET",
                "timeout": 0,
            };

            $.ajax(settings).done(function (products) {
                $("table > tbody").empty();
                products.forEach(CreateRow);
            }).fail(function () {
                let template = ShowAlertMessage("alert-danger", "Fail!", "Unable to load data ...server...issues");
                $("body").append(template);

            });
        });



        function CreateRow(pro) {
            let template = `
                                            <tr>
                                                <td class="productId">${pro.Id}</td>
                                                <td class="productName" contenteditable="false">${pro.Name}</td>
                                                <td class="productPrice"><input type="number" value=${pro.Price} disabled /></td>
                                                <td class="productQuantity"><input type="number" value=${pro.Quantity} disabled/></td>
                                                <td class="productTotal">${CalculateTotal(pro.Price, pro.Quantity)}</td>
                                                <td>
                                                    <button class="productEdit btn btn-success">Edit</button>
                                                    <button onclick="onDeleteProductHandler(this,${pro.Id})" class="productDelete btn btn-danger">Delete</button>

                                                </td>
                                            </tr>
                                            `
            // add template in dom
            let ele = $(template);

            $("table > tbody").append(ele);


        }

        // seperation of concerns
        function CalculateTotal(price, quantity) {
            return price * quantity;
        }






        //// Handler for Delete
        function onDeleteProductHandler(e, id) {

            var settings = {
                "url": "https://localhost:44336/ProductAPI/DeleteProduct?id=" + id,
                "method": "POST",
                "timeout": 0,
            };

            $.ajax(settings).done(function (product) {
                $(e).parent().parent().remove();
                let template = ShowAlertMessage("alert-success", "Success", `Successfully deleted Product with name ${product.Name}`);
                $("body").append(template);
            }).fail(function () {
                let template = ShowAlertMessage("alert-danger", "Fail", "Can not delete product server issues...");
                $("body").append(template);
            });

        }





        function LoadSpinner() {
            let template = `<div class="spinner-border"></div>`;
            $("table > tbody").html(template);

        }

        function ShowAlertMessage(status, title, message) {
            let template = `
                                         <div class="alert ${status} alert-dismissible">
                                            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                                            <strong>${title}</strong> ${message}
                                        </div>
                                        `;
            $("body").append(template);
        }




    </script>

}